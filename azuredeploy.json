{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "sergio",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbQcvva0xhekOWsWCmFENG6C+vqnWfj9ZfdyF/ADFYeRmSOFmphr3+nlmdkekWsHOQ0B9oyo0YOhrf4et6Y0W8bWc1d/243Nl9Jb3DyWp2mhQYF+xnNB86fwFBz7uork0LdX05D+dAbSEO+OOtKPZfwFiUMYhfjgYdmeeZb0TYr4fXTG77ROnow+QkHM38EExff3gPY7S9cWq19mqUSCNeq+NNDyExLFwVhRVepsPz9Ufw3qmXEl3mvvjugv1j0KzliFWtn1WJjXGyR3HKn8ib6fglhrGGpY0qSeb2gDUmpXObK16zEjHDE1Qs72x2LVNjKWEbffv3TuOlbwP7ENvB sergio@MININT-SCP2P2V"
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "17.04",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "16.04.0-LTS",
        "17.04"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'salinuxvm')]",
    "storageAccountType": "Standard_LRS",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "vmSize": "Standard_DS1_V2",

    "virtualNetworkGateways_vnetGW_name": "vnet1gw",
    "publicIPAddresses_vnetGWIP_name": "vnetgwpubip",

    "vnet1_netPrefix": "10.0.0.0/16",
    "vnet1_vnetName": "vnet1",
    "vnet1_ID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet1_vnetName'))]",
    "vnet1_subnetPrefix": "10.0.0.0/24",
    "vnet1_subnetName": "vnet1_subnet1",
    "vnet1_subnetRef": "[concat(variables('vnet1_ID'),'/subnets/',variables('vnet1_subnetName'))]",
    "vnet1_GWsubnetName": "vnet1_GWsubnet1",
    "vnet1_GWsubnetPrefix": "10.0.1.0/24",

    "vnet2_netPrefix": "10.1.0.0/16",
    "vnet2_vnetName": "vnet2",
    "vnet2_ID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet2_vnetName'))]",
    "vnet2_subnetPrefix": "10.1.0.0/24",
    "vnet2_subnetName": "vnet2_subnet1",
    "vnet2_subnetRef": "[concat(variables('vnet2_ID'),'/subnets/',variables('vnet2_subnetName'))]",

    "vm1.1_nicName": "vm1vnet1nic",
    "vm1.1_vmName": "vm1vnet1",
    
    "vm2.1_nicName": "vm2vnet1nic",
    "vm2.1_vmName": "vm2vnet1",
    
    "vm1.2_nicName": "vm1vnet2.nic",
    "vm1.2_vmName": "vm1vnet2",
    
    "vm2.2_nicName": "vm2vnet2nic",
    "vm2.2_vmName": "vm2vnet2"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet1_vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet1_netPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet1_subnetName')]",
            "properties": {
              "addressPrefix": "[variables('vnet1_subnetPrefix')]"
            }
          },
          {
            "name": "[variables('vnet1_GWsubnetName')]",
            "properties": {
              "addressPrefix": "[variables('vnet1_GWsubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet2_vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet2_netPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vnet2_subnetName')]",
            "properties": {
              "addressPrefix": "[variables('vnet2_subnetPrefix')]"
            }
          }
        ]
      }
    },
    
    {
        "type": "Microsoft.Network/virtualNetworkGateways",
        "name": "[variables('virtualNetworkGateways_vnetGW_name')]",
        "apiVersion": "2017-06-01",
        "location": "westeurope",
        "scale": null,
        "properties": {
            "resourceGuid": "c11d1065-51a2-4f29-848c-e693b8902092",
            "ipConfigurations": [
                {
                    "name": "default",
                    "etag": "W/\"1628402b-e92b-48f2-854c-0988550e08a1\"",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses_vnetGWIP_name'))]"
                        },
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet1_vnetName'), variables('vnet1_GWsubnetName'))]"
                        }
                    }
                }
            ],
            "sku": {
                "name": "VpnGw1",
                "tier": "VpnGw1",
                "capacity": 2
            },
            "gatewayType": "Vpn",
            "vpnType": "RouteBased",
            "enableBgp": false,
            "activeActive": false,
            "vpnClientConfiguration": {
                "vpnClientProtocols": [],
                "vpnClientRootCertificates": [],
                "vpnClientRevokedCertificates": []
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddresses_vnetGWIP_name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet1_vnetName'), variables('vnet1_GWsubnetName'))]"
        ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddresses_vnetGWIP_name')]",
      "apiVersion": "2017-06-01",
      "location": "westeurope",
      "scale": null,
      "properties": {
          "provisioningState": "Succeeded",
          "resourceGuid": "323288e8-1cb4-4e6a-8e27-c082cbbd1910",
          "publicIPAddressVersion": "IPv4",
          "publicIPAllocationMethod": "Dynamic",
          "idleTimeoutInMinutes": 4
      },
      "dependsOn": []
    },
 
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vm1.1_nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet1_vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnet1_subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1.1_vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm1.1_nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1.1_vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "1023",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vm1.1_nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm1.1_vmName'), '/', 'CustomScriptForLinux' )]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.4",
          "autoUpgradeMinorVersion": true,
          "settings": {
              "fileUris": [
                  "https://segonza.blob.core.windows.net/scripts/installApache.sh"
              ]
          },
          "protectedSettings": {
              "commandToExecute": "sh installApache.sh"
          }
      },
      "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', variables('vm1.1_vmName'))]"
      ]
    },
   
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vm2.1_nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet1_vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnet1_subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm2.1_vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm2.1_nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm2.1_vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "1023",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vm2.1_nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm2.1_vmName'), '/', 'CustomScriptForLinux' )]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.4",
          "autoUpgradeMinorVersion": true,
          "settings": {
              "fileUris": [
                  "https://segonza.blob.core.windows.net/scripts/installApache.sh"
              ]
          },
          "protectedSettings": {
              "commandToExecute": "sh installApache.sh"
          }
      },
      "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', variables('vm2.1_vmName'))]"
      ]
    },

    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vm1.2_nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet2_vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnet1_subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1.2_vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm1.2_nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1.2_vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "1023",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vm1.2_nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vm2.1_vmName'), '/', 'CustomScriptForLinux' )]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.4",
          "autoUpgradeMinorVersion": true,
          "settings": {
              "fileUris": [
                  "https://segonza.blob.core.windows.net/scripts/installApache.sh"
              ]
          },
          "protectedSettings": {
              "commandToExecute": "sh installApache.sh"
          }
      },
      "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', variables('vm2.1_vmName'))]"
      ]
    },

    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vm2.2_nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet2_vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vnet2_subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm2.2_vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm2.2_nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm2.2_vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "1023",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vm2.2_nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vm2.2_vmName'), '/', 'CustomScriptForLinux' )]",
        "apiVersion": "2016-04-30-preview",
        "location": "westeurope",
        "scale": null,
        "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "fileUris": [
                    "https://segonza.blob.core.windows.net/scripts/installApache.sh"
                ]
            },
            "protectedSettings": {
                "commandToExecute": "sh installApache.sh"
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vm2.2_vmName'))]"
        ]
    }
  ]
}
